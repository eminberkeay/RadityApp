{"ast":null,"code":"var _jsxFileName = \"/Users/eminberkeay/Desktop/radity/venv/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Create the provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  // Mock login function\n  const login = async credentials => {\n    // Replace with actual authentication logic\n    const {\n      username,\n      password\n    } = credentials;\n\n    // Simulating an API call\n    if (username === 'user' && password === 'password') {\n      setIsAuthenticated(true);\n      setUser({\n        username\n      });\n      return true;\n    } else {\n      setIsAuthenticated(false);\n      setUser(null);\n      return false;\n    }\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n\n  // Optionally check authentication status on mount\n  useEffect(() => {\n    // Check if the user is already authenticated (e.g., by checking cookies or local storage)\n    // This is just a placeholder\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setIsAuthenticated(true);\n      setUser({\n        username: 'user'\n      }); // Replace with actual user data\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","login","credentials","username","password","logout","token","localStorage","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eminberkeay/Desktop/radity/venv/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\n// Create the context\nexport const AuthContext = createContext();\n\n// Create the provider component\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [user, setUser] = useState(null);\n\n    // Mock login function\n    const login = async (credentials) => {\n        // Replace with actual authentication logic\n        const { username, password } = credentials;\n        \n        // Simulating an API call\n        if (username === 'user' && password === 'password') {\n            setIsAuthenticated(true);\n            setUser({ username });\n            return true;\n        } else {\n            setIsAuthenticated(false);\n            setUser(null);\n            return false;\n        }\n    };\n\n    const logout = () => {\n        setIsAuthenticated(false);\n        setUser(null);\n    };\n\n    // Optionally check authentication status on mount\n    useEffect(() => {\n        // Check if the user is already authenticated (e.g., by checking cookies or local storage)\n        // This is just a placeholder\n        const token = localStorage.getItem('authToken');\n        if (token) {\n            setIsAuthenticated(true);\n            setUser({ username: 'user' }); // Replace with actual user data\n        }\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, user, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAMY,KAAK,GAAG,MAAOC,WAAW,IAAK;IACjC;IACA,MAAM;MAAEC,QAAQ;MAAEC;IAAS,CAAC,GAAGF,WAAW;;IAE1C;IACA,IAAIC,QAAQ,KAAK,MAAM,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAChDN,kBAAkB,CAAC,IAAI,CAAC;MACxBE,OAAO,CAAC;QAAEG;MAAS,CAAC,CAAC;MACrB,OAAO,IAAI;IACf,CAAC,MAAM;MACHL,kBAAkB,CAAC,KAAK,CAAC;MACzBE,OAAO,CAAC,IAAI,CAAC;MACb,OAAO,KAAK;IAChB;EACJ,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACjBP,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACZ;IACA;IACA,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACPR,kBAAkB,CAAC,IAAI,CAAC;MACxBE,OAAO,CAAC;QAAEG,QAAQ,EAAE;MAAO,CAAC,CAAC,CAAC,CAAC;IACnC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,eAAe;MAAEE,IAAI;MAAEE,KAAK;MAAEI;IAAO,CAAE;IAAAV,QAAA,EACjEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAClB,EAAA,CA1CWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}